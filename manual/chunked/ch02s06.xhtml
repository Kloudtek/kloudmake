<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Resource Dependencies</title><link href="docbook.css" type="text/css" rel="stylesheet"/><meta content="DocBook XSL Stylesheets V1.78.1" name="generator"/><link rel="prev" href="ch02s05.xhtml" title="Query Language"/><link rel="next" href="ch02s07.xhtml" title="Resource refresh"/><script xmlns="" type="text/javascript" src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Resource Dependencies</th></tr><tr><td style="text-align: left; width: 20%; "><a accesskey="p" href="ch02s05.xhtml">Prev</a> </td><th style="text-align: center; width: 60%; ">Chapter 2. Using the SysTyrant Language (DSL)</th><td style="text-align: right; width: 20%; "> <a accesskey="n" href="ch02s07.xhtml">Next</a></td></tr></table><hr/></div></header><section class="section" id="N40245"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Resource Dependencies</h2></div></div></div>
        
        <p>
            In some cases you might need to have one resource to be executed before another. This can be done by
            declaring a dependency between the two.
        </p>
        <p>
            One way this can be done is by declaring a “before” or an "after" attribute (which value must be a
            valid resource query expression)
        </p>
        <p>
            For example to have a 'core.file' resource depend on a specific 'core.package' resource you could write:
        </p>
        <pre class="prettyprint">new core:package { id = “httpd”, name = “apache-httpd” }
new core:file { id="file", path = “/root/myfile1.txt”, content = “Hello World”, after = “@id = httpd” }</pre>
        <p>
            This could also be written as
        </p>
        <pre class="prettyprint">new core:package { id = “httpd”, name = “apache-httpd”, before = "@id = file" }
new core:file { path = “/root/myfile1.txt”, content = “Hello World” }</pre>
        <p>
            Another way to define a dependency is by using either <code class="code">-&gt;</code> or <code class="code">&gt;-</code>
            between resource creation declarations.
        </p>
        <p>
            So the above example could also be written as
        </p>
        <pre class="prettyprint">new core:package { id = “httpd” name = “apache-httpd” }
-&gt;
new core:file { path = “/root/myfile1.txt”, content = “Hello World” }</pre>
        <p>
            or alternatively
        </p>
        <pre class="prettyprint">new core:file { path = “/root/myfile1.txt”, content = “Hello World” }
&lt;-
new core:package { id = “httpd” name = “apache-httpd” }</pre>
    </section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="text-align: left; width: 40%; "><a accesskey="p" href="ch02s05.xhtml">Prev</a> </td><td style="text-align: center; width: 20%; "><a accesskey="u" href="ch02.xhtml">Up</a></td><td style="text-align: right; width: 40%; "> <a accesskey="n" href="ch02s07.xhtml">Next</a></td></tr><tr><td style="vertical-align: top; text-align: left; width: 40%; ">Query Language </td><td style="text-align: center; width: 20%; "><a accesskey="h" href="index.xhtml">Home</a></td><td style="vertical-align: top; text-align: right; width: 40%; "> Resource refresh</td></tr></table></div></footer></body></html>